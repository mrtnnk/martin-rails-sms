= SMSEasy (sms-easy)

SMSEasy allows you to send SMS messages from your Ruby application for free using email-to-text services provided by many carriers.

== Supported Carriers (US & International): 

Alltel, Ameritech, AT&T, Bell Atlantic, BellSouth Mobility, Beeline(UA), BlueSkyFrog, 
Boost Mobile, BPL Mobile, Cellular South, Claro (Brazil, Nicaragua), Comcast, Du, 
E-Plus, Etisalat, Fido, kajeet, Mobinil, Mobitel, Movistar, Metro PCS, O2, Orange, 
Powertel, PSC Wireless, Qwest, Rogers, Southern Link, Sprint, Suncom, 
T-Mobile (US/UK/Germany), Telefonica, Tracfone, Virgin Mobile, Verizon Wireless, 
Vodafone (UK, Egypt, Italy, Japan, Spain), and many more ...

Some International carriers require that their users subscribe to an Email to SMS
feature before they are able to receive SMS messages this way.  If one your users
mentions that they are not receiving their messages, chances are it is due to this
limitation.  Some of these carriers are include, Mobitel, Etisalat, T-Mobile (Netherlands).

== Requirements

* SMSEasy requires the use of a recent version of 'action_mailer'. Unlike the older sms-fu gem, *only* action_mailer 4.0.0+ is supported. If you have an older app, please try one of the older variants that supports action_mailer 3 and/or pony email agents.


== Setup Instructions

* Install sms-easy gem
  
  gem install sms-easy
  
* Add sms-easy.yml to your config folder (Rails only)

  http://github.com/preston/sms-easy/blob/master/templates/sms-easy.yml

* (Optional) Modify sms-easy.yml in your config folder with your reply-to e-mail address.

== Numbers and Carriers

* You have to send in the phone number, without any non-numeric characters.  The
  phone numbers must be 10 digits in length.  
* The two required parameters are the phone number and the phone carrier.
* Here are some of the default carrier values:
		
    Alltel Wireless   =>  "alltel"
    AT&T/Cingular     =>  "at&t"
    Boost Mobile      =>  "boost"
    Sprint Wireless   =>  "sprint"
    T-Mobile US       =>  "t-mobile"
    T-Mobile UK       =>  "t-mobile-uk"
    Virgin Mobile     =>  "virgin"
    Verizon Wireless  =>  "verizon"
    Vodafone Tokyo    =>  "vodafone-jp-tokyo"

* Check sms-easy.yml for a complete list of supported carriers, including international
  carriers as well.

== Usage

      
* Basic SMS delivery

    sms-easy.deliver("5558675309","at&t","message")

* If you want to set a custom from e-mail per SMS message, you can do so 
  by doing the following.

    sms-easy.deliver("5558675309","at&t","message", :from => "bob@test.com")

* You can set the maximum length of the SMS message, which is not set by
  default.  Most phones can only accept 128 characters.  To do this just 
  specify the limit option.

    sms-easy.deliver("5558675309","at&t","message", :limit => 128)

* You can retrieve just the formatted address to use in your own mailer.

    SMSEasy.sms_address("5558675309","at&t") # => "5558675309@txt.att.net"

== View Helpers (Rails)

* Retrieve a collection of all carriers

    <%= carrier_collection %>

* Display a select box with mobile carriers

    <%= carrier_select %>
    
* Display a custom select box with mobile carriers

    <%= carrier_select('user[carrier_name]', "Please choose a carrier") %>

== Special Thanks

I want to thank the following individuals with their help with adding some patches to SMS Fu:

* Brent Collier (brentmc79)
* Peter Boling (pboling)
* Mike (mic)

Copyright (c) 2010 Brendan G. Lim, Intridea, Inc., released under the MIT license

Additional modifications and updates by Preston Lee.
